diff --git a/DONOTFUCKINGDELETETHIS.sh b/DONOTFUCKINGDELETETHIS.sh
index 0e0b17b..382add1 100755
--- a/DONOTFUCKINGDELETETHIS.sh
+++ b/DONOTFUCKINGDELETETHIS.sh
@@ -45,14 +45,75 @@ function perform_command(){
         TMPVAR="$(git diff origin master | wc -l)"
         if [ "${TMPVAR}" -gt 0 ]
         then
-            echo "Would you like to see the difference in contents between the two repos? (y/n)"
+            echo -e "\nWould you like to see the difference in contents between the two repos? (y/n)"
             
             read tmpinput
-            if [ "$tmpinput" = "y"] || [ "$tmpinput" = "Y" ]
+            if [ "$tmpinput" = "y" ] || [ "$tmpinput" = "Y" ]
             then
                 git diff origin master
             fi
         fi
+    elif [ "$1" -eq 2 ]
+    then
+        echo "Checking for uncommitted changes, putting results into 'changes.log'"
+        git diff > changes.log
+    elif [ "$1" -eq 3 ]
+    then
+        echo "Checking project for TODO lines"
+        
+        if [ -f "todo.log" ]
+        then
+            rm "todo.log"
+        fi
+ 
+        grep -r "#TODO" * > todo.log
+    elif [ "$1" -eq 4 ]
+    then
+        echo "Checking for any errors in haskell scripts, putting results into 'error.log'"
+        find . -name "*.hs" -exec ghc -fno-code {} \; &> error.log
+    elif [ "$1" -eq 5 ]
+    then
+        echo "Performing a git pull"
+        git pull
+    elif [ "$1" -eq 6 ]
+    then
+        echo "Your directory size is: $(du -hcs .)"
+    elif [ "$1" -eq 7 ]
+    then
+        echo "There are $(find . -type f | wc -l) files in this project"
+        echo "There are $(find . -type d | wc -l) directories in this project"
+    elif [ "$1" -eq 8 ]
+    then
+        tmpinput=""
+        until [ "$tmpinput" = ":quit" ]
+        do
+            clear
+            echo "What kind of search would you like to perform?"
+            echo "1 for file name search"
+            echo -e "2 for file content search\n"
+
+            read tmpinput
+            
+            if [[ "$tmpinput" =~ $re ]]
+            then
+                if [ "$tmpinput" -eq "1" ]
+                then
+                    clear
+                    echo "Enter file name to search:"
+                    read tmpinput2
+                    find . * | grep "$tmpinput2"
+                    read -n 1 -s -r -p "Press any key to continue"
+                elif [ "$tmpinput" -eq "2" ]
+                then
+                    clear
+                    echo "Enter file content to search:"
+                    read tmpinput2
+                    grep -R "$tmpinput2"
+                    read -n 1 -s -r -p "Press any key to continue"
+                fi
+            fi
+        done
+        
     else
         echo "Number out of range of menu"
     fi
diff --git a/changes.log b/changes.log
index dfa55ef..e69de29 100644
--- a/changes.log
+++ b/changes.log
@@ -1,104 +0,0 @@
-diff --git a/ProjectAnalyze.sh b/ProjectAnalyze.sh
-index e8847b6..5359e2e 100755
---- a/ProjectAnalyze.sh
-+++ b/ProjectAnalyze.sh
-@@ -1,11 +1,83 @@
- #!/bin/bash
- 
--echo "Checking if local repo up to date with remote repo:"
-+######
-+echo "Checking which files are different between remote and local repo:"
- 
- git fetch
--git diff origin master
-+git diff --name-only origin master
- 
--echo "Done"
-+read -n 1 -s -r -p "Press any key to continue"
-+echo -e "\n"
- 
-+######
- echo "Putting uncommitted changes into 'changes.log'"
- 
-+git diff > changes.log
-+
-+read -n 1 -s -r -p "Press any key to continue"
-+echo -e "\n"
-+
-+######
-+echo "Checking project for any TODO lines"
-+
-+if [ -f "todo.log" ]
-+then
-+    echo "todo.log exists"
-+    rm "todo.log"
-+fi
-+
-+grep -r "#TODO" > todo.log
-+
-+read -n 1 -s -r -p "Press any key to continue"
-+echo -e "\n"
-+
-+######
-+echo "Checking for any errors in haskell scripts"
-+
-+find . -name "*.hs" -exec ghc -fno-code {} \; &> error.log
-+
-+echo -e "Done\n"
-+
-+read -n 1 -s -r -p "Press any key to continue"
-+echo -e "\n"
-+
-+######
-+VAR1="$(git diff origin master | wc -l)"
-+if [ "${VAR1}" -gt 0 ]
-+then
-+    echo "There's a difference between the local repo and the remote repo"
-+    echo "Would you like to see the contents of the different files? (y/n)"
-+
-+    read input
-+    if [ "$input" = "y" ] || [ "$input" = "Y" ]
-+    then
-+        echo -e "\n"
-+        git diff origin master
-+        echo -e "End of local/remote difference\n"
-+    else
-+        echo -e "\n"
-+    fi
-+fi
-+
-+######
-+echo "Would you like to do a git pull? (y/n)"
-+read input
-+
-+if [ "$input" = "y" ] || [ "$input" = "Y" ]
-+then
-+    git pull
-+fi
-+echo -e "\n"
-+
-+######
-+echo "Your directory size is:"
-+echo $(du -hcs .)
-+echo -e "\n"
-+
-+read -n 1 -s -r -p "Press any key to continue"
-+echo -e "\n"
-+
-+#TODO Add a check for how many files are in project
-+######
-+
-+#TODO Make a search function to search for something
-diff --git a/README.md b/README.md
-index 28d526c..ed3b27f 100644
---- a/README.md
-+++ b/README.md
-@@ -1,8 +1,6 @@
- # CS1XA3 #
- 
- 
--
--
- we made it
- 
- ~ Bread
diff --git a/todo.log b/todo.log
index a51c19d..f21e32a 100644
--- a/todo.log
+++ b/todo.log
@@ -1,8 +1,8 @@
 Assign1/README.md:    3. Every line in project with '#TODO' tag is put into 'todo.log'
-changes.log:+grep -r "#TODO" > todo.log
-changes.log:+#TODO Add a check for how many files are in project
-changes.log:+#TODO Make a search function to search for something
-coolthing.sh:        grep -r "#TODO" * > todo.log
+changes.log:-+grep -r "#TODO" > todo.log
+changes.log:-+#TODO Add a check for how many files are in project
+changes.log:-+#TODO Make a search function to search for something
+DONOTFUCKINGDELETETHIS.sh:        grep -r "#TODO" * > todo.log
 ProjectAnalyze.sh:grep -r "#TODO" > todo.log
 ProjectAnalyze.sh:#TODO Add a check for how many files are in project
 ProjectAnalyze.sh:#TODO Make a search function to search for something
